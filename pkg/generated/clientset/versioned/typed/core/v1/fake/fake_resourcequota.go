

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	corev1 "github.com/costa92/k8s-ai/pkg/generated/applyconfigurations/core/v1"
	typedcorev1 "github.com/costa92/k8s-ai/pkg/generated/clientset/versioned/typed/core/v1"
	v1 "k8s.io/api/core/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeResourceQuotas implements ResourceQuotaInterface
type fakeResourceQuotas struct {
	*gentype.FakeClientWithListAndApply[*v1.ResourceQuota, *v1.ResourceQuotaList, *corev1.ResourceQuotaApplyConfiguration]
	Fake *FakeCoreV1
}

func newFakeResourceQuotas(fake *FakeCoreV1, namespace string) typedcorev1.ResourceQuotaInterface {
	return &fakeResourceQuotas{
		gentype.NewFakeClientWithListAndApply[*v1.ResourceQuota, *v1.ResourceQuotaList, *corev1.ResourceQuotaApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("resourcequotas"),
			v1.SchemeGroupVersion.WithKind("ResourceQuota"),
			func() *v1.ResourceQuota { return &v1.ResourceQuota{} },
			func() *v1.ResourceQuotaList { return &v1.ResourceQuotaList{} },
			func(dst, src *v1.ResourceQuotaList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ResourceQuotaList) []*v1.ResourceQuota { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ResourceQuotaList, items []*v1.ResourceQuota) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
